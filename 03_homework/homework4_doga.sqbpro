<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/ogulc/Desktop/Sandbox_DSI/SQL/SQL2/05_sql/farmersmarket.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="110"/><column_width id="3" width="5101"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainbooth"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="booth" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="116"/><column index="2" value="145"/><column index="3" value="300"/><column index="4" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Homework4_doga">--# COALESCE
SELECT 
    product_name || ', ' || 
    COALESCE(product_size, '') || ' (' || 
    COALESCE(product_qty_type, 'unit') || ')'
FROM 
    product;
	
--# Windowed Functions
--1)

SELECT 
    customer_id,
    market_date,
    ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY market_date) AS ROW_NUMBER
FROM 
    customer_purchases;
	
--2)

SELECT 
	customer_id,
	market_date
FROM 
(
	SELECT customer_id,
    market_date,
    ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY market_date DESC) AS ROW_NUMBER
	FROM 
    customer_purchases
)
as visit
WHERE row_number=1
	
--3)	
SELECT
    customer_id,
    product_id,
    market_date,
    quantity,
    COUNT(*) OVER (PARTITION BY customer_id, product_id) as purchase_number
FROM
    customer_purchases;
	
--# String manipulations
--1)
SELECT 
    product_name,
    CASE 
        WHEN INSTR(product_name, '-') &gt; 0 THEN TRIM(SUBSTR(product_name, INSTR(product_name, '-') + 1))
        ELSE NULL
    END AS product_description
FROM 
    product;
	
--# UNION
--1)
SELECT * 
FROM
(
    SELECT 
        market_date, 
        (quantity * cost_to_customer_per_qty) AS total_dollar,
        ROW_NUMBER() OVER (PARTITION BY market_date ORDER BY (quantity * cost_to_customer_per_qty) ASC) AS r_min
    FROM 
        customer_purchases
) AS ranked_purchases
WHERE r_min = 1
	
UNION

SELECT * 
FROM
(
    SELECT 
        market_date, 
        (quantity * cost_to_customer_per_qty) AS total_dollar,
        ROW_NUMBER() OVER (PARTITION BY market_date ORDER BY (quantity * cost_to_customer_per_qty) DESC) AS r_max
    FROM 
        customer_purchases
) AS ranked_purchases
WHERE r_max = 1;</sql><current_tab id="0"/></tab_sql></sqlb_project>
